<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turing.turing.dao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.turing.turing.entity.Project">
    <id column="pro_id" jdbcType="INTEGER" property="proId" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="pro_username" jdbcType="VARCHAR" property="proUsername" />
  </resultMap>
  <resultMap id="WithPhotoBaseResultMap" type="com.turing.turing.entity.Project">
    <id column="pro_id" jdbcType="INTEGER" property="proId" />
    <result column="pro_name" jdbcType="VARCHAR" property="proName" />
    <result column="pro_username" jdbcType="VARCHAR" property="proUsername" />
    <association property="photo" javaType="com.turing.turing.entity.Photo">
      <id column="photo_id" jdbcType="INTEGER" property="photoId" />
      <result column="photo_loc" jdbcType="VARCHAR" property="photoLoc" />
      <result column="photo_type" jdbcType="VARCHAR" property="photoType" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pro_id, pro_name, pro_username
  </sql>
  <sql id="With_Photo_Base_Column_List">
    pro_id, pro_name, pro_username, photo_id, photo_loc, photo_type
  </sql>
  <select id="selectByExample" parameterType="com.turing.turing.entity.ProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project
    where pro_id = #{proId,jdbcType=INTEGER}
  </select>
  <!--
    List<Project> selectByExampleWithPhoto(ProjectExample example);
    Project selectByPrimaryKeyWithPhoto(Integer proId);
  -->
  <select id="selectByExampleWithPhoto" parameterType="com.turing.turing.entity.ProjectExample" resultMap="WithPhotoBaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="With_Photo_Base_Column_List" />
    from project pro left join photo ph on pro.`pro_name` = ph.`photo_type`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithPhoto" parameterType="java.lang.Integer" resultMap="WithPhotoBaseResultMap">
    select
    <include refid="With_Photo_Base_Column_List" />
    from project pro left join photo ph on pro.`pro_name` = ph.`photo_type`
    where pro_id = #{proId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where pro_id = #{proId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.turing.turing.entity.ProjectExample">
    delete from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.turing.turing.entity.Project">
    insert into project (pro_id, pro_name, pro_username
      )
    values (#{proId,jdbcType=INTEGER}, #{proName,jdbcType=VARCHAR}, #{proUsername,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.turing.turing.entity.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        pro_id,
      </if>
      <if test="proName != null">
        pro_name,
      </if>
      <if test="proUsername != null">
        pro_username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proId != null">
        #{proId,jdbcType=INTEGER},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proUsername != null">
        #{proUsername,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.turing.turing.entity.ProjectExample" resultType="java.lang.Long">
    select count(*) from project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project
    <set>
      <if test="record.proId != null">
        pro_id = #{record.proId,jdbcType=INTEGER},
      </if>
      <if test="record.proName != null">
        pro_name = #{record.proName,jdbcType=VARCHAR},
      </if>
      <if test="record.proUsername != null">
        pro_username = #{record.proUsername,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project
    set pro_id = #{record.proId,jdbcType=INTEGER},
      pro_name = #{record.proName,jdbcType=VARCHAR},
      pro_username = #{record.proUsername,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.turing.turing.entity.Project">
    update project
    <set>
      <if test="proName != null">
        pro_name = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proUsername != null">
        pro_username = #{proUsername,jdbcType=VARCHAR},
      </if>
    </set>
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.turing.turing.entity.Project">
    update project
    set pro_name = #{proName,jdbcType=VARCHAR},
      pro_username = #{proUsername,jdbcType=VARCHAR}
    where pro_id = #{proId,jdbcType=INTEGER}
  </update>
</mapper>